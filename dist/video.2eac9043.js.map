{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,Q,C,I,I,E,I,K,E,W,C,E,a,C,C,ECAO,OAAM,EAQT,YAAY,CAAO,CAAE,CAEjB,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,KAAA,EACd,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAC1C,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAClD,OAAO,cAAc,CAAG,OAAO,cAAc,EAAI,EAAE,CACnD,IAAI,CAAC,UAAU,CAAI,AAAsB,YAAtB,IAAI,CAAC,YAAY,CAAkB,qCAAuC,yCAC7F,IAAI,CAAC,aAAa,CAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAG1C,IAAI,CAAC,IAAI,EACb,CAQA,MAAO,CAGH,IAAI,CAAC,WAAW,GAGhB,IAAI,CAAC,iBAAiB,EAE1B,CAQA,mBAAoB,CAChB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAS,AAAC,IAClC,EAAM,cAAc,GACpB,IAAI,CAAC,MAAM,EACf,EACJ,CAQA,aAAc,CAGV,GAAI,OAAO,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAG,OAGrD,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAG1C,IAAI,EAAS,SAAS,aAAa,CAAC,SAGpC,CAAA,EAAO,GAAG,CAAG,IAAI,CAAC,UAAU,CAG5B,SAAS,IAAI,CAAC,WAAW,CAAC,EAE9B,CAQA,eAAgB,CAGZ,IAAI,CAAC,IAAI,GAGT,IAAI,CAAC,MAAM,CAAC,SAAS,EAEzB,CASA,oBAAoB,CAAK,CAAE,CACnB,EAAM,IAAI,EAAI,GAAG,WAAW,CAAC,KAAK,GAGlC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAGnB,IAAI,CAAC,MAAM,CAAC,UAAU,GAGtB,IAAI,CAAC,IAAI,GAEjB,CAQA,QAAS,CAGD,IAAI,CAAC,MAAM,CACX,IAAI,CAAC,IAAI,IAMiB,YAAtB,IAAI,CAAC,YAAY,EACjB,CAAA,IAAI,CAAC,MAAM,CAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAE,CAC5C,QAAS,IAAI,CAAC,QAAQ,CACtB,OAAQ,CACJ,QAAS,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EACrC,cAAe,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CACrD,CACJ,EAAA,EAIsB,UAAtB,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,MAAM,CAAG,IAAI,MAAM,MAAM,CAAC,IAAI,CAAC,aAAa,CAAE,CAC/C,GAAI,IAAI,CAAC,QAAQ,CACjB,UAAW,CAAA,CACf,GAGA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAQ,IAAM,IAAI,CAAC,IAAI,IACtC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAS,IAAM,IAAI,CAAC,IAAI,IAGvC,IAAI,CAAC,IAAI,GAGT,IAAI,CAAC,IAAI,IAGrB,CAOA,MAAO,CAGH,IAAI,CAAC,IAAI,GAER,AAAsB,YAAtB,IAAI,CAAC,YAAY,CAAkB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAK,IAAI,CAAC,MAAM,CAAC,IAAI,EAClF,CAQA,MAAO,CACH,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,UAC7B,CAQA,MAAO,CACH,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAChC,CAGJ,C","sources":["<anon>","themes/mercury/source/scripts/components/video.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire0837\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"bHj0q\", function(module, exports) {\n\n$parcel$export(module.exports, \"Video\", () => $8842740767fe12fa$export$ae01dedf5c052bb);\nclass $8842740767fe12fa$export$ae01dedf5c052bb {\n    /**\n     * \n     * Constructor\n     * \n     * @param {element} element video parent\n     */ constructor(element){\n        this.video = element;\n        this.player = undefined;\n        this.video_id = this.video.dataset.videoId;\n        this.video_source = this.video.dataset.videoSource;\n        window.loaded_scripts = window.loaded_scripts || [];\n        this.script_src = this.video_source === \"youtube\" ? \"https://www.youtube.com/iframe_api\" : \"https://player.vimeo.com/api/player.js\";\n        this.video_element = this.video.dataset.id;\n        // Initialise the video\n        this.init();\n    }\n    /**\n     * \n     * Initialise the video item\n     * \n     */ init() {\n        // Load the scripts\n        this.loadScripts();\n        // Attach the event listeners\n        this.addEventListeners();\n    }\n    /**\n     * \n     * Add the click event handler to the video\n     * \n     */ addEventListeners() {\n        this.video.addEventListener(\"click\", (event)=>{\n            event.preventDefault();\n            this.create();\n        });\n    }\n    /**\n     * \n     * Load the scripts if they have not already been loaded\n     * \n     */ loadScripts() {\n        // If the script has already been loaded, return\n        if (window.loaded_scripts.includes(this.script_src)) return;\n        // Add the script to the loaded scripts array\n        window.loaded_scripts.push(this.script_src);\n        // Create the script tag\n        let script = document.createElement(\"script\");\n        // Set the script source\n        script.src = this.script_src;\n        // Append the script to the body\n        document.body.appendChild(script);\n    }\n    /**\n     * \n     * Youtube on player ready event handler\n     * \n     */ onPlayerReady() {\n        // Show the video and hide the thumbnail\n        this.show();\n        // Play the youtube video\n        this.player.playVideo();\n    }\n    /**\n     * \n     * Youytube Player play state event handler\n     * \n     * @param {event} event\n     */ onPlayerStateChange(event) {\n        if (event.data == YT.PlayerState.ENDED) {\n            // Reset the video to the start\n            this.player.seekTo(0);\n            // Pause the video\n            this.player.pauseVideo();\n            // Hide the video and show the thumbnail\n            this.hide();\n        }\n    }\n    /**\n     * \n     * Create the video player instance\n     * \n     */ create() {\n        // If the pkayer has already been created, then just hit play\n        if (this.player) this.play();\n        else {\n            // Youtube specific video createion\n            if (this.video_source === \"youtube\") this.player = new YT.Player(this.video_element, {\n                videoId: this.video_id,\n                events: {\n                    onReady: this.onPlayerReady.bind(this),\n                    onStateChange: this.onPlayerStateChange.bind(this)\n                }\n            });\n            // Vimeo specific video creation\n            if (this.video_source === \"vimeo\") {\n                this.player = new Vimeo.Player(this.video_element, {\n                    id: this.video_id,\n                    autopause: false\n                });\n                // Attach the event listeners\n                this.player.on(\"play\", ()=>this.show());\n                this.player.on(\"ended\", ()=>this.hide());\n                // Show the video and hide the thumbnail\n                this.show();\n                // Play the vimeo video\n                this.play();\n            }\n        }\n    }\n    /**\n     * \n     * Play the video instance\n     * \n     */ play() {\n        // Show the video and hide the thumbnail\n        this.show();\n        this.video_source === \"youtube\" ? this.player.playVideo() : this.player.play();\n    }\n    /**\n     * \n     * Show the video and hide the thumbnail\n     * \n     */ show() {\n        this.video.classList.add(\"playing\");\n    }\n    /**\n     * \n     * Hide the video and show the thumbnail\n     * \n     */ hide() {\n        this.video.classList.remove(\"playing\");\n    }\n}\n\n});\n\n})();\n//# sourceMappingURL=video.2eac9043.js.map\n","export class Video {\n\n    /**\n     * \n     * Constructor\n     * \n     * @param {element} element video parent\n     */\n    constructor(element) {\n\n        this.video = element;\n        this.player = undefined;\n        this.video_id = this.video.dataset.videoId;\n        this.video_source = this.video.dataset.videoSource;\n        window.loaded_scripts = window.loaded_scripts || [];\n        this.script_src = (this.video_source === 'youtube') ? 'https://www.youtube.com/iframe_api' : 'https://player.vimeo.com/api/player.js';\n        this.video_element = this.video.dataset.id;\n\n        // Initialise the video\n        this.init();\n    }\n\n\n    /**\n     * \n     * Initialise the video item\n     * \n     */\n    init() {\n\n        // Load the scripts\n        this.loadScripts();\n\n        // Attach the event listeners\n        this.addEventListeners();\n\n    }\n\n\n    /**\n     * \n     * Add the click event handler to the video\n     * \n     */\n    addEventListeners() {\n        this.video.addEventListener('click', (event) => {\n            event.preventDefault();\n            this.create()\n        });\n    }\n\n\n    /**\n     * \n     * Load the scripts if they have not already been loaded\n     * \n     */\n    loadScripts() {\n\n        // If the script has already been loaded, return\n        if (window.loaded_scripts.includes(this.script_src)) return;\n\n        // Add the script to the loaded scripts array\n        window.loaded_scripts.push(this.script_src);\n\n        // Create the script tag\n        let script = document.createElement('script');\n\n        // Set the script source\n        script.src = this.script_src;\n\n        // Append the script to the body\n        document.body.appendChild(script);\n\n    }\n\n\n    /**\n     * \n     * Youtube on player ready event handler\n     * \n     */\n    onPlayerReady() {\n\n        // Show the video and hide the thumbnail\n        this.show();\n\n        // Play the youtube video\n        this.player.playVideo();\n\n    }\n\n\n    /**\n     * \n     * Youytube Player play state event handler\n     * \n     * @param {event} event\n     */\n    onPlayerStateChange(event) {\n        if (event.data == YT.PlayerState.ENDED) {\n\n            // Reset the video to the start\n            this.player.seekTo(0)\n\n            // Pause the video\n            this.player.pauseVideo();\n\n            // Hide the video and show the thumbnail\n            this.hide();\n        }\n    }\n\n\n    /**\n     * \n     * Create the video player instance\n     * \n     */\n    create() {\n\n        // If the pkayer has already been created, then just hit play\n        if (this.player) {\n            this.play();\n        }\n        // Otherwise we will need to create the player first\n        else {\n\n            // Youtube specific video createion\n            if (this.video_source === 'youtube') {\n                this.player = new YT.Player(this.video_element, {\n                    videoId: this.video_id,\n                    events: {\n                        onReady: this.onPlayerReady.bind(this),\n                        onStateChange: this.onPlayerStateChange.bind(this)\n                    }\n                });\n            }\n\n            // Vimeo specific video creation\n            if (this.video_source === 'vimeo') {\n                this.player = new Vimeo.Player(this.video_element, {\n                    id: this.video_id,\n                    autopause: false\n                });\n\n                // Attach the event listeners\n                this.player.on('play', () => this.show());\n                this.player.on('ended', () => this.hide());\n\n                // Show the video and hide the thumbnail\n                this.show();\n\n                // Play the vimeo video\n                this.play();\n            }\n        }\n    }\n\n    /**\n     * \n     * Play the video instance\n     * \n     */\n    play() {\n\n        // Show the video and hide the thumbnail\n        this.show();\n\n        (this.video_source === 'youtube') ? this.player.playVideo() : this.player.play();\n    }\n\n\n    /**\n     * \n     * Show the video and hide the thumbnail\n     * \n     */\n    show() {\n        this.video.classList.add('playing');\n    }\n\n\n    /**\n     * \n     * Hide the video and show the thumbnail\n     * \n     */\n    hide() {\n        this.video.classList.remove('playing');\n    }\n\n\n}\n\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$8842740767fe12fa$export$ae01dedf5c052bb","set","s","enumerable","configurable","constructor","element","video","player","undefined","video_id","dataset","videoId","video_source","videoSource","window","loaded_scripts","script_src","video_element","id","init","loadScripts","addEventListeners","addEventListener","event","preventDefault","create","includes","push","script","document","createElement","src","body","appendChild","onPlayerReady","show","playVideo","onPlayerStateChange","data","YT","PlayerState","ENDED","seekTo","pauseVideo","hide","play","Player","events","onReady","bind","onStateChange","Vimeo","autopause","on","classList","add","remove"],"version":3,"file":"video.2eac9043.js.map"}