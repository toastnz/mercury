"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmercury"] = self["webpackChunkmercury"] || []).push([["themes_mercury_source_scripts_components_video_js"],{

/***/ "./themes/mercury/source/scripts/components/video.js":
/*!***********************************************************!*\
  !*** ./themes/mercury/source/scripts/components/video.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Video: () => (/* binding */ Video)\n/* harmony export */ });\nclass Video {\n\n    /**\n     * \n     * Constructor\n     * \n     * @param {element} element video\n     */\n    constructor(element) {\n\n        this.video = element;\n        this.video_id = this.video.dataset.videoId;\n        this.video_element = this.video.dataset.id;\n        this.video_source = this.video.dataset.videoSource;\n        window.loaded_scripts = window.loaded_scripts || [];\n        this.script_src = (this.video_source === 'youtube') ? 'https://www.youtube.com/iframe_api' : 'https://player.vimeo.com/api/player.js';\n\n        // Initialise the video\n        this.init();\n    }\n\n\n    /**\n     * \n     * Initialise the video item\n     * \n     */\n    init() {\n\n        // Load the scripts for the respective API\n        this.loadScripts();\n\n        // Attach the needed event listeners\n        this.addEventListeners();\n\n    }\n\n\n    /**\n     * \n     * Add the click event handler to the video\n     * \n     */\n    addEventListeners() {\n        this.video.addEventListener('click', (event) => {\n            event.preventDefault();\n            this.create()\n        });\n    }\n\n\n    /**\n     * \n     * Load the scripts if they have not already been loaded\n     * \n     */\n    loadScripts() {\n\n        // If the script has already been loaded, return\n        if (window.loaded_scripts.includes(this.script_src)) return;\n\n        // Add the script to the loaded scripts array\n        window.loaded_scripts.push(this.script_src);\n\n        // Create the script tag\n        let script = document.createElement('script');\n\n        // Set the script source\n        script.src = this.script_src;\n\n        // Append the script to the body\n        document.body.appendChild(script);\n\n    }\n\n\n    /**\n     * \n     * Youtube on player ready event handler\n     * \n     */\n    onPlayerReady() {\n\n        // Show the video and hide the thumbnail\n        this.show();\n\n        // Play the youtube video\n        this.player.playVideo();\n\n    }\n\n\n    /**\n     * \n     * Youytube Player play state event handler\n     * \n     * @param {event} event\n     */\n    onPlayerStateChange(event) {\n        if (event.data == YT.PlayerState.ENDED) {\n\n            // Reset the video to the start\n            this.player.seekTo(0)\n\n            // Pause the video\n            this.player.pauseVideo();\n\n            // Hide the video and show the thumbnail\n            this.hide();\n        }\n    }\n\n\n    /**\n     * \n     * Create the video player instance\n     * \n     */\n    create() {\n\n        // If the pkayer has already been created, then just hit play\n        if (this.player) {\n            this.play();\n        }\n        // Otherwise we will need to create the player first\n        else {\n\n            // Youtube specific video createion\n            if (this.video_source === 'youtube') {\n                this.player = new YT.Player(this.video_element, {\n                    videoId: this.video_id,\n                    events: {\n                        onReady: this.onPlayerReady.bind(this),\n                        onStateChange: this.onPlayerStateChange.bind(this)\n                    }\n                });\n            }\n\n            // Vimeo specific video creation\n            if (this.video_source === 'vimeo') {\n                this.player = new Vimeo.Player(this.video_element, {\n                    id: this.video_id,\n                    autopause: false\n                });\n\n                // Attach the event listeners\n                this.player.on('play', () => this.show());\n                this.player.on('ended', () => this.hide());\n\n                // Show the video and hide the thumbnail\n                this.show();\n\n                // Play the vimeo video\n                this.play();\n            }\n        }\n    }\n\n    /**\n     * \n     * Play the video instance\n     * \n     */\n    play() {\n\n        // Show the video and hide the thumbnail\n        this.show();\n\n        (this.video_source === 'youtube') ? this.player.playVideo() : this.player.play();\n    }\n\n\n    /**\n     * \n     * Show the video and hide the thumbnail\n     * \n     */\n    show() {\n        this.video.classList.add('playing');\n    }\n\n\n    /**\n     * \n     * Hide the video and show the thumbnail\n     * \n     */\n    hide() {\n        this.video.classList.remove('playing');\n    }\n\n\n}\n\n\n\n//# sourceURL=webpack://mercury/./themes/mercury/source/scripts/components/video.js?");

/***/ })

}]);