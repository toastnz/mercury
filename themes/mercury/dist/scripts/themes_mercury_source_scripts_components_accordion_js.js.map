{"version":3,"file":"themes_mercury_source_scripts_components_accordion_js.js","mappings":"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","sources":["webpack://mercury/./themes/mercury/source/scripts/components/accordion.js"],"sourcesContent":["export class Accordion {\n\n    /**\n     * \n     * Constructor\n     * \n     * @param {element} element accordion parent\n     */\n    constructor(element) {\n\n        this.accordion = element;\n        this.trigger = this.accordion.querySelector('.js-trigger');\n        this.content = this.accordion.querySelector('.js-content');\n\n        // Initialise the accordion\n        this.init();\n    }\n\n\n    /**\n     * \n     * Initialise the accordion item\n     * \n     */\n    init() {\n        this.getState();\n        this.addEventListeners();\n    }\n\n\n    /**\n     * \n     * Get the current state of the accordion\n     * \n     */\n    getState() {\n        this.is_open = this.accordion.classList.contains('active');\n    }\n\n\n    /**\n    * \n    * Toggle the current state of the accordion\n    * \n    */\n    toggle() {\n        (this.is_open) ? this.close() : this.open();\n    }\n\n    /**\n     * \n     * Add the click event handler to the accordion\n     * \n     */\n    addEventListeners() {\n        this.accordion.addEventListener('click', () => this.toggle());\n    }\n\n\n    /**\n     * \n     * Add the click event handler to the accordion\n     * \n     */\n    updateState(state) {\n\n        // Update the current state\n        this.is_open = state;\n\n        // Update the aria-expanded attribute\n        this.trigger.setAttribute('aria-expanded', state);\n\n    }\n\n\n    /**\n     * \n     * Open the accordion\n     * \n     */\n    open() {\n\n        // Add active class to the accordion\n        this.accordion.classList.add('active');\n\n        // Quickly get the height we want to animate to\n        this.content.style.height = 'auto';\n        var height = this.content.clientHeight + 'px';\n\n        // Revert the heioght back to nothing\n        this.content.style.height = 0;\n\n        // Animate the height once the calculations are done\n        setTimeout(() => this.content.style.height = height, 0);\n\n        // Update the current state\n        this.updateState(true);\n\n    }\n\n    /**\n     * \n     * Close the accordion\n     * \n     */\n    close() {\n\n        // Revert the height back to nothing\n        this.content.style.height = 0;\n\n        // Remove the active class once animations are over\n        this.content.addEventListener('transitionend', () => {\n            this.accordion.classList.remove('active');\n        }, { once: true });\n\n        // Update the current state\n        this.updateState(false);\n\n    }\n}\n\n"],"names":["Accordion","element","_classCallCheck","accordion","trigger","querySelector","content","init","_createClass","key","value","getState","addEventListeners","is_open","classList","contains","toggle","close","open","_this","addEventListener","updateState","state","setAttribute","_this2","add","style","height","clientHeight","setTimeout","_this3","remove","once"],"sourceRoot":""}